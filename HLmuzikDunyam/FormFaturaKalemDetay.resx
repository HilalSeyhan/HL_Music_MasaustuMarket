<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yXFMP8kw8D/JMPA/yXCYP8kw8D/JMPA/yXCYP8k
        w8D/JMPA/yXCYP8kw8D/JMPA/yXCYP8kw8D/JMPA/yXFMP8wryD/LLGA/yyxgP8sr0D/LLGA/yyxgP8s
        r0D/LLGA/yyxgP8sr0D/LLGA/yyxgP8sr0D/LLGA/yyxgP8wryD/OJ8g/zSfgP80n4D/NJ9A/zSfgP80
        n4D/NJ9A/zSfgP80n4D/NJ9A/zSfgP80n4D/NJ9A/zSfgP80n4D/OJ8g/0CPIP88i4D/PIuA/zyLQP88
        i4D/PIuA/zyLQP88i4D/PIuA/zyLQP88i4D/PIuA/zyLQP88i4D/PIuA/0CPIP9FejD/RHrA/0R6wP9F
        ejAAAAAAAAAAAP9FejD/RHrA/0R6wP9FemD/RHrA/0R6wP9FemD/RHrA/0R6wP9FejD/Smow/0powP9K
        aMD/SmowAAAAAAAAAAD/Smow/0powP9KaMD/Smhg/0powP9KaMD/Smhg/0powP9KaMD/SmowAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/1BYIP9UVoD/VFaA/1BYIAAAAAAAAAAA/1BYIP9UVoD/VFaA/1BYIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9YQCD/XESA/1xEgP9YQCAAAAAAAAAAAP9YQCD/XESA/1xEgP9Y
        QCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/YDAg/2QygP9kMoD/YDAgAAAAAAAAAAD/YDAg/2QygP9k
        MoD/YDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2ogMP9s
        H8D/bB/A/2ogMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAJJJAACSSQAAkkkAAJJJAACeSQAAnkkAAP55
        AAD+eQAA/nkAAP/5AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8k
        x0D/IseA/yLHgP8ix4D/IseA/yTHQP8kx0D/IseA/yLHgP8ix4D/IseA/yTHQP8kx0D/IseA/yLHgP8i
        x4D/IseA/yTHQP8kx0D/IseA/yLHgP8ix4D/IseA/yTHQP8kx0D/IseA/yLHgP8ix4D/IseA/yTHQAAA
        AAAAAAAA/ya/gP8mv///Jr///ya///8mv///Jr+A/ya/gP8mv///Jr///ya///8mv///Jr+A/ya/gP8m
        v///Jr///ya///8mv///Jr+A/ya/gP8mv///Jr///ya///8mv///Jr+A/ya/gP8mv///Jr///ya///8m
        v///Jr+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8urYD/Lq3//y6t//8urf//Lq3//y6tgP8urYD/Lq3//y6t//8u
        rf//Lq3//y6tgP8urYD/Lq3//y6t//8urf//Lq3//y6tgP8urYD/Lq3//y6t//8urf//Lq3//y6tgP8u
        rYD/Lq3//y6t//8urf//Lq3//y6tgAAAAAAAAAAA/zSjQP8yo4D/MqOA/zKjgP8yo4D/NKNA/zSjQP8y
        o4D/MqOA/zKjgP8yo4D/NKNA/zSjQP8yo4D/MqOA/zKjgP8yo4D/NKNA/zSjQP8yo4D/MqOA/zKjgP8y
        o4D/NKNA/zSjQP8yo4D/MqOA/zKjgP8yo4D/NKNAAAAAAAAAAAD/OJtA/zaZgP82mYD/NpmA/zaZgP84
        m0D/OJtA/zaZgP82mYD/NpmA/zaZgP84m0D/OJtA/zaZgP82mYD/NpmA/zaZgP84m0D/OJtA/zaZgP82
        mYD/NpmA/zaZgP84m0D/OJtA/zaZgP82mYD/NpmA/zaZgP84m0AAAAAAAAAAAP86kYD/OpH//zqR//86
        kf//OpH//zqRgP86kYD/OpH//zqR//86kf//OpH//zqRgP86kYD/OpH//zqR//86kf//OpH//zqRgP86
        kYD/OpH//zqR//86kf//OpH//zqRgP86kYD/OpH//zqR//86kf//OpH//zqRgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/QoCA/0J///9Cf///Qn///0J///9CgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/QoCA/0J///9C
        f///Qn///0J///9CgID/QoCA/0J///9Cf///Qn///0J///9CgID/QoCA/0J///9Cf///Qn///0J///9C
        gIAAAAAAAAAAAP9IeED/RnaA/0Z2gP9GdoD/RnaA/0h4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9I
        eED/RnaA/0Z2gP9GdoD/RnaA/0h4QP9IeED/RnaA/0Z2gP9GdoD/RnaA/0h4QP9IeED/RnaA/0Z2gP9G
        doD/RnaA/0h4QAAAAAAAAAAA/0hsQP9KbID/SmyA/0psgP9KbID/SGxAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/0hsQP9KbID/SmyA/0psgP9KbID/SGxA/0hsQP9KbID/SmyA/0psgP9KbID/SGxA/0hsQP9K
        bID/SmyA/0psgP9KbID/SGxAAAAAAAAAAAD/TmSA/01j//9NY///TWP//01j//9OZIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/TmSA/01j//9NY///TWP//01j//9OZID/TmSA/01j//9NY///TWP//01j//9O
        ZID/TmSA/01j//9NY///TWP//01j//9OZIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/1ZSgP9VUf//VVH//1VR//9VUf//VlKAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/1ZSgP9VUf//VVH//1VR//9VUf//VlKAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/WEhA/1pIgP9aSID/WkiA/1pIgP9Y
        SEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/WEhA/1pIgP9aSID/WkiA/1pIgP9YSEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9cQED/XkCA/15AgP9e
        QID/XkCA/1xAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9cQED/XkCA/15AgP9eQID/XkCA/1xAQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2I2gP9h
        Nf//YTX//2E1//9hNf//YjaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2I2gP9hNf//YTX//2E1//9h
        Nf//YjaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9q
        JID/aSP//2kj//9pI///aSP//2okgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/2wcQP9uGoD/bhqA/24agP9uGoD/bBxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////////8MMMMOAAAAB/////4AA
        AAHDDDDDwwwww4AAAAH/////gfgAAcP8MMPD/DDDgfgAAf//////+B+B//w/w//8P8P/+B+B////////
        /4H////D////////////////////////////////
</value>
  </data>
</root>